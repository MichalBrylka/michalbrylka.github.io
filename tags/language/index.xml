<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>language - Tag - Michał Bryłka | Devexcellence</title><link>https://michalbrylka.github.io/tags/language/</link><description>language - Tag - Michał Bryłka | Devexcellence</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>michal.brylka@gmail.com (Michał Bryłka)</managingEditor><webMaster>michal.brylka@gmail.com (Michał Bryłka)</webMaster><copyright>&amp;copy; Copyright 2019-2022 Michał Bryłka</copyright><lastBuildDate>Mon, 05 Dec 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://michalbrylka.github.io/tags/language/" rel="self" type="application/rss+xml"/><item><title>Generic math extended example</title><link>https://michalbrylka.github.io/posts/generic-math-matrix/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0100</pubDate><author>Michał Bryłka</author><guid>https://michalbrylka.github.io/posts/generic-math-matrix/</guid><description>Generic math feature from C# 11 brings us a lot of flexibility. Besides ubiquitously shared simple generic methods we can also implement whole types. Matrix seems to be a good candidate</description></item></channel></rss>